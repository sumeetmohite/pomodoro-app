{"version":3,"sources":["App.js","index.js"],"names":["App","useState","bgColor","setBgColor","btnColor","setBtnColor","cardBg","setCardBg","status","setStatus","time","setTime","millis","setMillis","btnStyle","backgroundColor","border","audio","Audio","intervalRef","useRef","timerHandler","temp","current","setInterval","play","clearInterval","minutes","Math","floor","seconds","toFixed","convert","console","log","changeCardHandler","cardnum","motion","div","className","style","h2","initial","y","animate","background","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA+HeA,EA3HH,WAAO,IAAD,EACYC,mBAAS,WADrB,mBACVC,EADU,KACFC,EADE,OAEcF,mBAAS,WAFvB,mBAEVG,EAFU,KAEDC,EAFC,OAGUJ,mBAAS,WAHnB,mBAGVK,EAHU,KAGHC,EAHG,OAKWN,mBAAS,SALpB,mBAKVO,EALU,KAKFC,EALE,OAMOR,mBAAS,SANhB,mBAMVS,EANU,KAMJC,EANI,OAOWV,mBAAS,MAPpB,mBAOVW,EAPU,KAOFC,EAPE,KAUVC,EAAW,CACfC,gBAAgB,GAAD,OAAIX,GACnBY,OAAO,QAEHC,EAAQ,IAAIC,MAAM,yBAQxB,IAUMC,EAAcC,mBAEdC,EAAe,WACnB,GAAc,UAAXb,EAAmB,CACpB,IAAIc,EAAOV,EACRA,IACHO,EAAYI,QAAUC,aAAY,WACpB,MAATF,IACDL,EAAMQ,OACNC,cAAcP,EAAYI,UAG5BV,EADAS,GAAc,KAEdX,EA7BN,SAAiBC,GACjB,IAAIe,EAAUC,KAAKC,MAAMjB,EAAS,KAC9BkB,GAAYlB,EAAS,IAAS,KAAMmB,QAAQ,GAChD,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,EA0BrCE,CAAQV,MAChB,MAEU,SAAXd,IACDkB,cAAcP,EAAYI,SAC1BU,QAAQC,IAAIxB,EAAME,KAKhBuB,EAAoB,SAACC,GACzBV,cAAcP,EAAYI,SAC1Bd,EAAU,SACK,IAAZ2B,GACDzB,EAAQ,SACRE,EAAU,MACVV,EAAW,WACXI,EAAU,WACVF,EAAY,YAEM,IAAZ+B,GACNzB,EAAQ,QACRE,EAAU,KACVV,EAAW,WACXI,EAAU,WACVF,EAAY,YAEM,IAAZ+B,IACNzB,EAAQ,SACRE,EAAU,KACVV,EAAW,WACXI,EAAU,WACVF,EAAY,aAuBhB,OAEE,eAACgC,EAAA,EAAOC,IAAR,CAAYC,UAAU,MAAMC,MAAO,CAACzB,gBAAgB,GAAD,OAAIb,IAAvD,UACE,qBAAKqC,UAAU,SAAf,SAAwB,cAACF,EAAA,EAAOI,GAAR,CAAWC,QAAS,CAACC,GAAG,KAAMC,QAAS,CAACD,EAAE,GAA1C,8BACxB,eAACN,EAAA,EAAOC,IAAR,CAAYC,UAAU,mBAAmBC,MAAO,CAACK,WAAW,GAAD,OAAIvC,IAC/DoC,QAAS,CAACC,GAAG,KAAMC,QAAS,CAACD,EAAE,GAD/B,UAEE,wBAAQJ,UAAU,WAAWO,QAAS,WAAKX,EAAkB,IAAKK,MAAO1B,EAAzE,sBACA,wBAAQyB,UAAU,WAAWO,QAAS,WAAKX,EAAkB,IAAKK,MAAO1B,EAAzE,yBACA,wBAAQyB,UAAU,WAAWO,QAAS,WAAKX,EAAkB,IAAKK,MAAO1B,EAAzE,wBAEE,sBAAKyB,UAAU,WAAWC,MAAO,CAACzB,gBAAgB,GAAD,OAAIT,IAArD,UACE,6BAAKI,IACL,sBAAK6B,UAAU,mBAAf,UACE,wBAAQA,UAAU,MAAMC,MAAO,CAACK,WAAW,GAAD,OAAIzC,IAAa0C,QAAS,iBA1FhE,UAAXtC,GACDC,EAAU,QAEE,SAAXD,GACDC,EAAU,cAEZY,KAoFU,SAAyFb,IACzF,wBAAQ+B,UAAU,MAAMC,MAAO,CAACK,WAAW,GAAD,OAAIzC,IAAa0C,QAAS,kBAhC9ErC,EAAU,SACViB,cAAcP,EAAYI,cACZ,YAAXjB,GACDK,EAAQ,SACRE,EAAU,OAEO,YAAXP,GACNK,EAAQ,QACRE,EAAU,MAEO,YAAXP,IACNK,EAAQ,SACRE,EAAU,QAoBF,gCClHdkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c9b40df.chunk.js","sourcesContent":["import React,{useState, useRef} from 'react';\nimport {motion} from 'framer-motion';\nimport './App.scss';\n\nconst App = () => {\n  const[bgColor,setBgColor] = useState('#ed9090');\n  const[btnColor,setBtnColor] = useState('#c44c4c');\n  const[cardBg,setCardBg] = useState('#d36b6b');\n\n  const[status, setStatus] = useState('Start');\n  const[time, setTime] = useState('25:00');\n  const[millis, setMillis] = useState(1500000);\n\n\n  const btnStyle = {\n    backgroundColor:`${btnColor}`,\n    border:'none'\n  }\n  const audio = new Audio('sounds/alarm_tone.mp3');\n\n  function convert(millis) {\n  let minutes = Math.floor(millis / 60000);\n  let seconds = ((millis % 60000) / 1000).toFixed(0);\n  return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n  }\n\n  const toggleStatus = () => {\n    if(status === 'Start'){\n      setStatus('Stop')\n    }\n    if(status === 'Stop'){\n      setStatus('Start')\n    }\n    timerHandler();\n  }\n\n  const intervalRef = useRef();\n\n  const timerHandler = () => {\n    if(status === 'Start'){ \n      let temp = millis;\n      if(millis)\n      intervalRef.current = setInterval(function(){\n        if(temp === 1000){\n          audio.play();\n          clearInterval(intervalRef.current);\n        }\n        temp = temp - 1000;\n        setMillis(temp);\n        setTime(convert(temp));        \n      },1000)\n    }\n    if(status === 'Stop'){\n      clearInterval(intervalRef.current);\n      console.log(time, millis);\n    }  \n  }\n  \n\n  const changeCardHandler = (cardnum) => {\n    clearInterval(intervalRef.current);\n    setStatus('Start')\n    if(cardnum === 1){\n      setTime('25:00');\n      setMillis(1500000);\n      setBgColor('#ed9090');\n      setCardBg('#d36b6b');\n      setBtnColor('#c44c4c');\n    }\n    else if(cardnum === 2){\n      setTime('5:00');\n      setMillis(300000);\n      setBgColor('#9395bc');\n      setCardBg('#8688ba');\n      setBtnColor('#6f71a8');\n    }\n    else if(cardnum === 3){\n      setTime('15:00');\n      setMillis(900000);\n      setBgColor('#8bbfba');\n      setCardBg('#69b4ae');\n      setBtnColor('#5d9e97');\n    }\n  }\n\n  const resetHandler = () => {\n    setStatus('Start');\n    clearInterval(intervalRef.current);\n    if(cardBg === '#d36b6b'){\n      setTime('25:00');\n      setMillis(1500000);\n    }\n    else if(cardBg === '#8688ba'){\n      setTime('5:00');\n      setMillis(300000);\n    }\n    else if(cardBg === '#69b4ae'){\n      setTime('15:00');\n      setMillis(900000);\n    }\n    \n  }\n\n\n  return (\n    \n    <motion.div className=\"App\" style={{backgroundColor:`${bgColor}`}} >\n      <div className='header'><motion.h2 initial={{y:-200}} animate={{y:0}}>Pomodoro Timer</motion.h2></div>\n      <motion.div className=\"widget-container\" style={{background:`${cardBg}`}}\n      initial={{y:-200}} animate={{y:0}}>\n        <button className='link-btn' onClick={()=>{changeCardHandler(1)}} style={btnStyle}>Pomodoro</button>\n        <button className='link-btn' onClick={()=>{changeCardHandler(2)}} style={btnStyle}>Short Break</button>\n        <button className='link-btn' onClick={()=>{changeCardHandler(3)}} style={btnStyle}>Long Break</button>\n\n          <div className=\"pomodoro\" style={{backgroundColor:`${cardBg}`}}>\n            <h1>{time}</h1>\n            <div className='button-container'>\n              <button className=\"btn\" style={{background:`${btnColor}`}} onClick={()=>toggleStatus()}>{status}</button>\n              <button className=\"btn\" style={{background:`${btnColor}`}} onClick={()=> resetHandler()}>Reset</button>\n            </div>\n          </div>\n\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}